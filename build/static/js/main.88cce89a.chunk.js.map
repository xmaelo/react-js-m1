{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","utils/getInitials.js","components/NavItem.js","pages/firebase.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","components/customer/CustomerListResults.js","components/customer/AddPatient.js","components/customer/CustomerListToolbar.js","pages/CustomerList.js","components/dashboard/Budget.js","components/dashboard/LatestOrders.js","components/dashboard/LatestProducts.js","components/dashboard/Sales.js","components/dashboard/TasksProgress.js","components/dashboard/TotalCustomers.js","components/dashboard/TotalProfit.js","components/dashboard/TrafficByDevice.js","pages/Dashboard.js","icons/Facebook.js","icons/Google.js","pages/Login.js","pages/NotFound.js","components/product/ProductListToolbar.js","components/product/ProductCard.js","__mocks__/products.js","pages/ProductList.js","pages/Register.js","components/settings/SettingsNotifications.js","components/settings/SettingsPassword.js","pages/Settings.js","components/account/LogoConfig.js","components/account/ParametresDetails.js","pages/Parametres.js","components/customer/DoctorListResults.js","components/customer/AddMedecin.js","components/customer/DoctorListToolbar.js","pages/DoctorList.js","__mocks__/customers.js","components/account/AccountProfileDoctor.js","pages/DoctorDetails.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","Badge","badgeContent","length","variant","lgUp","onClick","name","replace","split","slice","map","v","toUpperCase","join","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","console","log","auth","database","styles","bounceInUp","animation","animationName","Radium","keyframes","user","jobTitle","email","items","BarChartIcon","UsersIcon","SettingsIcon","DashboardSidebar","onMobileClose","openMobile","showForm","setShowform","error","setError","values","setValues","password","fetch","method","headers","JSON","stringify","r","useEffect","content","flexDirection","alignItems","p","Avatar","avatar","cursor","getInitials","currentUser","Typography","Divider","List","item","style","m","align","gutterBottom","pt","TextField","fullWidth","label","onChange","e","target","value","type","helperText","onSaveAdmin","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","city","country","timezone","AccountProfile","Card","CardContent","moment","format","CardActions","states","AccountProfileDetails","firstName","lastName","phone","state","handleChange","event","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","required","select","SelectProps","native","option","Account","Helmet","minHeight","Container","maxWidth","lg","CustomerListResults","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","id","TableBody","hover","selected","userId","selectedIndex","concat","handleSelectOne","profile","nom_complet","createAt","Date","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","states2","root","circle","borderRadius","completed","zIndex","ColorlibConnector","withStyles","alternativeLabel","backgroundImage","line","border","StepConnector","useColorlibStepIconStyles","boxShadow","ColorlibStepIcon","classes","icons","1","2","3","className","clsx","String","button","marginRight","instructions","marginTop","marginBottom","poids","taille","sexe","date","CustomizedSteppers","setShowForm","React","activeStep","setActiveStep","val","steps","createUserWithEmailAndPassword","res","uid","custs","ref","values2","createdAt","getTime","set","sendEmailVerification","Stepper","connector","Step","StepLabel","StepIconComponent","defaultValue","InputLabelProps","shrink","disabled","prevActiveStep","onAuth","bounceOutDown","CustomerListToolbar","mx","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","CustomerList","patients","setPatient","on","snapshot","Object","entries","key","sort","filter","is_doctor","Budget","red","uuid","subtract","Sales","useTheme","data","datasets","indigo","labels","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","endIcon","TasksProgress","orange","green","TotalCustomers","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","navigate","useNavigate","sm","xl","Facebook","d","Google","Login","setEmail","setPass","onLogin","preventDefault","signInWithEmailAndPassword","confirm","getIdTokenResult","then","idTokenResult","claims","admin","catch","initialValues","onSubmit","errors","handleBlur","isSubmitting","handleSubmit","touched","mb","startIcon","pb","textALign","onBlur","NotFound","ProductListToolbar","ProductCard","product","media","description","pl","totalDownloads","ProductList","products","Pagination","Register","policy","validationSchema","Yup","shape","max","oneOf","ml","Link","underline","FormHelperText","SettingsNotifications","wrap","FormControlLabel","control","defaultChecked","SettingsPassword","SettingsView","LogoConfig","ParametresDetails","Parametres","DoctorListResults","avatarUrl","specialite","message","setMessage","va","ok","ancien","onPost","DoctorListToolbar","DoctorList","doctor","setDoctor","timeConverter","UNIX_timestamp","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","AccountProfileDoctor","DoctorDetails","routes","element","children","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88cce89a.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2'\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c'\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","const Logo = (props) => (\r\n  <img\r\n    alt=\"Logo\"\r\n    src=\"/static/logo.svg\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Logo;\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from './Logo';\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n","export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","import {\r\n  NavLink as RouterLink,\r\n  matchPath,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ListItem } from '@material-ui/core';\r\n\r\nconst NavItem = ({\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const location = useLocation();\r\n\r\n  const active = href ? !!matchPath({\r\n    path: href,\r\n    end: false\r\n  }, location.pathname) : false;\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      sx={{\r\n        display: 'flex',\r\n        py: 0\r\n      }}\r\n      {...rest}\r\n    >\r\n      <Button\r\n        component={RouterLink}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: 'medium',\r\n          justifyContent: 'flex-start',\r\n          letterSpacing: 0,\r\n          py: 1.25,\r\n          textTransform: 'none',\r\n          width: '100%',\r\n          ...(active && {\r\n            color: 'primary.main'\r\n          }),\r\n          '& svg': {\r\n            mr: 1\r\n          }\r\n        }}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon size=\"20\" />\r\n        )}\r\n        <span>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport 'firebase/database';\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyChlqgS0eRuo9f7TtMcqIE6oD7DzsjSaxk\",\r\n    authDomain: \"mamed-7686b.firebaseapp.com\",\r\n    databaseURL: \"https://mamed-7686b-default-rtdb.firebaseio.com\",\r\n    projectId: \"mamed-7686b\",\r\n    storageBucket: \"mamed-7686b.appspot.com\",\r\n    messagingSenderId: \"273623971549\",\r\n    appId: \"1:273623971549:web:3d6328fb956926c59c0d34\"\r\n};\r\n\r\nconst opp = firebase.initializeApp(firebaseConfig);\r\n\r\nconsole.log('firebase firebase firebase', firebase)\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\n\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  TextField,\r\n  List, \r\n  Typography,\r\n  ListItem\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport getInitials from 'src/utils/getInitials';\r\nimport { bounceInUp } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport NavItem from './NavItem';\r\nimport { auth } from '../pages/firebase';\r\n\r\nconst styles = {\r\n  bounceInUp: {\r\n    animation: 'x 2s',\r\n    animationName: Radium.keyframes(bounceInUp, 'bounce')\r\n  }\r\n};\r\n\r\n\r\nconst user = {\r\n  //avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Ismael foletia',\r\n  email: \"ismae@hgn.com\"\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/patients',\r\n    icon: UsersIcon,\r\n    title: 'Patients'\r\n  },\r\n  {\r\n    href: '/medecins',\r\n    icon: UsersIcon,\r\n    title: 'Medecins'\r\n  },\r\n  // {\r\n  //   href: 'products',\r\n  //   icon: ShoppingBagIcon,\r\n  //   title: 'Products'\r\n  // },\r\n  {\r\n    href: 'configuration',\r\n    icon: SettingsIcon,\r\n    title: 'Configuration'\r\n  },\r\n  // {\r\n  //   href: 'account',\r\n  //   icon: UserIcon,\r\n  //   title: 'Account'\r\n  // },\r\n  // {\r\n  //   href: 'settings',\r\n  //   icon: SettingsIcon,\r\n  //   title: 'Settings'\r\n  // },\r\n  // {\r\n  //   href: '/login',\r\n  //   icon: LockIcon,\r\n  //   title: 'Login'\r\n  // },\r\n  // {\r\n  //   href: '/register',\r\n  //   icon: UserPlusIcon,\r\n  //   title: 'Register'\r\n  // },\r\n  // {\r\n  //   href: '/404',\r\n  //   icon: AlertCircleIcon,\r\n  //   title: 'Error'\r\n  // }\r\n];\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n  const [showForm, setShowform] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [values, setValues] = useState({});\r\n\r\n  function onAddAdmin(){\r\n    setShowform(!showForm);\r\n  }\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  async function onSaveAdmin(){\r\n    setError(false);\r\n    if(!values.password || !values.email){\r\n      setError(true);\r\n      return;\r\n    }\r\n    const r = await fetch('http://localhost:3002/create-admin', {\r\n       method: 'POST',\r\n       headers: { 'Content-Type': 'application/json' },\r\n       body: JSON.stringify(values)\r\n      });\r\n    console.log('after run', r);\r\n    setShowform(false);\r\n  }\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n        >\r\n          {getInitials(auth.currentUser?.email)}\r\n        </Avatar>\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {auth.currentUser?.email}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n          <ListItem\r\n            disableGutters\r\n            sx={{\r\n              display: 'flex',\r\n              py: 0\r\n            }}\r\n          >\r\n            <Button\r\n              sx={{\r\n                color: 'text.secondary',\r\n                fontWeight: 'medium',\r\n                justifyContent: 'flex-start',\r\n                letterSpacing: 0,\r\n                py: 1.25,\r\n                textTransform: 'none',\r\n                color: 'primary.main'\r\n              }}\r\n              onClick={()=>onAddAdmin()}\r\n            >\r\n                <ArrowUpwardIcon size=\"20\" />\r\n              <span>\r\n                {\"AJouter un admin\"}\r\n              </span>\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Box>\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      {showForm &&\r\n        <StyleRoot>\r\n          <div style={styles.bounceInUp}>\r\n            <Box\r\n              sx={{\r\n                backgroundColor: 'background.default',\r\n                m: 2,\r\n                p: 2\r\n              }}\r\n            >\r\n              <Typography\r\n                align=\"center\"\r\n                gutterBottom\r\n                variant=\"h4\" \r\n              >\r\n                AJout d'un admin\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  //display: 'flex',\r\n                  justifyContent: 'center',\r\n                  pt: 2\r\n                }}\r\n              > \r\n               {error&&<p style={{color: 'red'}}>Vous n'avez pas remplir tout les champ</p>}\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    margin=\"normal\"\r\n                    name=\"email\"\r\n                    //onBlur={handleBlur}\r\n                    onChange={(e)=>setValues({...values, email: e.target.value})}\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    margin=\"normal\"\r\n                    name=\"password\"\r\n                    helperText=\"Au moins 6 deigits\"\r\n                    //onBlur={handleBlur}\r\n                    onChange={(e)=>setValues({...values, password: e.target.value})}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={()=>onSaveAdmin()}\r\n                  variant=\"contained\"\r\n                >\r\n                  Sauvegarder\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </div>\r\n        </StyleRoot>\r\n      }\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport DashboardNavbar from './DashboardNavbar';\r\nimport DashboardSidebar from './DashboardSidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  })\r\n);\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport Logo from './Logo';\r\n\r\nconst MainNavbar = (props) => (\r\n  <AppBar\r\n    elevation={0}\r\n    {...props}\r\n  >\r\n    <Toolbar sx={{ height: 64 }}>\r\n      <RouterLink to=\"/\">\r\n        <Logo />\r\n      </RouterLink>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nexport default MainNavbar;\r\n","import { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport MainNavbar from './MainNavbar';\r\n\r\nconst MainLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst MainLayoutWrapper = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64\r\n});\r\n\r\nconst MainLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst MainLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <MainNavbar />\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n);\r\n\r\nexport default MainLayout;\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst user = {\r\n  //avatar: '/static/images/avatar.jpg',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7',\r\n  email: \"ismae@jdh\"\r\n};\r\n\r\nconst AccountProfile = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            height: 100,\r\n            width: 100\r\n          }}\r\n        >\r\n        {getInitials(user.email)}\r\n        </Avatar>\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${user.city} ${user.country}`}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        Upload picture\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default AccountProfile;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst AccountProfileDetails = (props) => {\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      {...props}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccountProfileDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AccountProfile from 'src/components/account/AccountProfile';\r\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\r\n\r\nconst Account = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Account | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Account;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst CustomerListResults = ({ customers, ...rest }) => {\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 1050 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Nom Complet\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Télephone\r\n                </TableCell>\r\n                <TableCell>\r\n                  Addresse\r\n                </TableCell>\r\n                <TableCell>\r\n                  Date d'inscription\r\n                </TableCell>\r\n                <TableCell>\r\n                  Options\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.userId}\r\n                  selected={selectedCustomerIds.indexOf(customer.userId) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.userId) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.userId)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={customer.profile}\r\n                        sx={{ mr: 2 }}\r\n                      >\r\n                        {getInitials(customer.nom_complet)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.nom_complet}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.phone}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${customer.city}, ${customer.state}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    { customer.createAt ? moment(customer.createAt).format('DD/MM/YYYY') : moment(new Date()).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={4}>\r\n                        {/*<EditIcon sx={{ fontSize: '25px' }} />*/}\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        {<DeleteOutlineIcon sx={{ color: 'red', fontSize: '25px' }} />}\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                         {/*<VisibilityIcon sx={{ fontSize: '25px' }} />*/}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nCustomerListResults.propTypes = {\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default CustomerListResults;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { bounceInUp } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { auth, database } from '../../pages/firebase';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  TextField,\r\n  CardHeader\r\n} from '@material-ui/core';\r\n\r\nconst styles = {\r\n  bounceInUp: {\r\n    animation: 'x 5s',\r\n    animationName: Radium.keyframes(bounceInUp, 'bounce')\r\n  }\r\n};\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\nconst states2 = [\r\n  {\r\n    value: 'F',\r\n    label: 'Femme'\r\n  },\r\n  {\r\n    value: 'H',\r\n    label: 'Homme'\r\n  }\r\n];\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <SettingsIcon />,\r\n    2: <GroupAddIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Informations de Base', 'Informations détaillées', 'Informations sécondaire'];\r\n}\r\n\r\nconst user = {\r\n  profile: '/static/images/avatar.jpg',\r\n  city: '',\r\n  state: '',\r\n  nom_complet: '',\r\n  email: '',\r\n  phone: \"\",\r\n  poids: \"\",\r\n  taille: \"\",\r\n  password: \"\",\r\n  sexe: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  date: null,\r\n\r\n};\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <p>Yesss</p>;\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function CustomizedSteppers({setShowForm}) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [values, setValues] = useState(user);\r\n\r\n  const handleChange = (event) => {\r\n    const val = {\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    }\r\n    console.log('values===>', val)\r\n    setValues(val);\r\n  };\r\n\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  async function onAuth(){\r\n    try{\r\n      console.log('values2 values2 ==>before ave', values)\r\n      const res = await auth.createUserWithEmailAndPassword(\r\n        values.email,\r\n        values.password\r\n      );\r\n      console.log('res resv res res res', res)\r\n     const userId = res.user.uid;\r\n     console.log('user Id', userId, res.user)\r\n     const custs = database.ref('users/'+userId);\r\n     let values2 =  values\r\n     delete values2.password\r\n     values2 = {...values2, createdAt: new Date().getTime(), nom_complet: values.lastName+ \" \"+values.firstName};\r\n     custs.set({...values2});\r\n     setShowForm(false)\r\n     await auth.currentUser.sendEmailVerification()\r\n    }catch(e){\r\n      console.error('on auth error', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyleRoot>\r\n      <div className={classes.root} style={styles.bounceInUp}>\r\n        <Card>\r\n          <CardHeader\r\n            //subheader=\"The information can be edited\"\r\n            title={\r\n              <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                {steps.map((label) => (\r\n                  <Step key={label}>\r\n                    <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n            } \r\n          />\r\n\r\n          <CardContent>\r\n        \r\n            <div>\r\n              {false ? (\r\n                <div>\r\n                  <Typography className={classes.instructions}>\r\n                    All steps completed - you&apos;re finished\r\n                  </Typography>\r\n                  <Button onClick={handleReset} className={classes.button}>\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                      <div>\r\n                  {activeStep === 0 &&\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              helperText=\"Please specify the first name\"\r\n                              label=\"Nom\"\r\n                              name=\"firstName\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.firstName}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Prenom\"\r\n                              name=\"lastName\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.lastName}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Email\"\r\n                              name=\"email\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.email}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Télephone\"\r\n                              name=\"phone\"\r\n                              onChange={handleChange}\r\n                              value={values.phone}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Country\"\r\n                              name=\"state\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.state}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Ville\"\r\n                              name=\"city\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.city}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                  }\r\n                  {activeStep === 1 &&\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              helperText=\"Enter votre poids en Kg\"\r\n                              label=\"Poids\"\r\n                              name=\"poids\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.poids}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Taille (cm)\"\r\n                              name=\"taille\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.taille}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          \r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Sexe\"\r\n                              name=\"sexe\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              select\r\n                              SelectProps={{ native: true }}\r\n                              value={values.sexe}\r\n                              variant=\"outlined\"\r\n                            >\r\n                              {states2.map((option) => (\r\n                                <option\r\n                                  key={option.value}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </option>\r\n                              ))}\r\n                            </TextField>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              id=\"date\"\r\n                              label=\"Date de naissance\"\r\n                              type=\"date\"\r\n                              name=\"date\"\r\n                              defaultValue=\"2017-05-24\"\r\n                              onChange={handleChange}\r\n                              value={values.date}\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                  }\r\n                  {activeStep === 2 &&\r\n                    <Card>\r\n                      <CardContent>\r\n                        <Box\r\n                          sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex',\r\n                            flexDirection: 'column'\r\n                          }}\r\n                        >\r\n                          <Avatar\r\n                            src={user.avatar}\r\n                            sx={{\r\n                              height: 150,\r\n                              width: 150\r\n                            }}\r\n                          />\r\n                        </Box>\r\n                        <Box\r\n                          sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex',\r\n                            flexDirection: 'column'\r\n                          }}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          > <br/>\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Mot de passe\"\r\n                              name=\"password\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.password}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                        </Box>\r\n                      </CardContent>\r\n                      <Divider />\r\n                      <CardActions>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          fullWidth\r\n                          variant=\"text\"\r\n                        >\r\n                          Upload picture\r\n                        </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                  }\r\n                      <Divider />\r\n                      <Box\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent: 'flex-end',\r\n                          p: 2\r\n                        }}\r\n                      >\r\n                          {activeStep !== steps.length && (\r\n                            <div> \r\n                              <div>\r\n                                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                                  Arrière\r\n                                </Button>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={()=>{\r\n                                    if(steps.length-1 !== activeStep){\r\n                                      handleNext();\r\n                                    }else{\r\n                                      onAuth();\r\n                                    }\r\n                                  }}\r\n                                  className={classes.button}\r\n                                >\r\n                                  {activeStep === steps.length - 1 ? 'Sauvegader' : 'Suivant'}\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                      </Box>\r\n                    </div>\r\n                  \r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </StyleRoot>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\nimport { bounceOutDown } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport AddPatient from './AddPatient';\r\n\r\n\r\nconst styles = {\r\n  bounceOutDown: {\r\n    animation: 'x 5s',\r\n    animationName: Radium.keyframes(bounceOutDown, 'bounce')\r\n  }\r\n};\r\nfunction CustomerListToolbar(props){\r\n  const [showForm, setShowForm] = useState(false);\r\n  \r\n  return(\r\n    <>\r\n      { showForm&&<AddPatient setShowForm={setShowForm} /> }\r\n      { !showForm &&\r\n          <Box {...props}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n              }}\r\n            >\r\n              <Button>\r\n                Pdf\r\n              </Button>\r\n              <Button sx={{ mx: 1 }}>\r\n                Excel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={()=>setShowForm(true)}\r\n              >\r\n                Nouveau Patients\r\n              </Button>\r\n            </Box>\r\n            <Box sx={{ mt: 3 }}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Box sx={{ maxWidth: 500 }}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SvgIcon\r\n                              fontSize=\"small\"\r\n                              color=\"action\"\r\n                            >\r\n                              <SearchIcon />\r\n                            </SvgIcon>\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                      placeholder=\"Filtrer par nom\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n          </Box>\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default CustomerListToolbar;\r\n","import React, { useState, useEffect }from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport CustomerListResults from 'src/components/customer/CustomerListResults';\r\nimport CustomerListToolbar from 'src/components/customer/CustomerListToolbar';\r\nimport { database } from './firebase';\r\nconst CustomerList = () => {\r\n  const [patients, setPatient] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async()  =>{\r\n       let custs = database.ref('users');\r\n       custs.on('value', (snapshot) => { \r\n            if(snapshot.val()){\r\n              let a = Object.entries(snapshot.val()).map(([key, value])=>{\r\n                return {...value, userId: key};\r\n              })\r\n\r\n            a.sort((x, y)=> y.createdAt - x.createdAt)\r\n            a = a.filter((a) => !a.is_doctor);\r\n            setPatient(a);\r\n            }\r\n          });\r\n      })()\r\n    }, []);\r\n\r\n  return(\r\n    <>\r\n      <Helmet>\r\n        <title>Patients | maMED</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <CustomerListToolbar />\r\n          <Box sx={{ pt: 3 }}>\r\n            <CustomerListResults customers={patients} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst Budget = (props) => (\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            EN OBSERVATION\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            4000\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: red[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <FaceIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          pt: 2,\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <ArrowDownwardIcon sx={{ color: red[900] }} />\r\n        <Typography\r\n          sx={{\r\n            color: red[900],\r\n            mr: 1\r\n          }}\r\n          variant=\"body2\"\r\n        >\r\n          30%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          \r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default Budget;\r\n","import moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst orders = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst LatestOrders = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Latest Orders\" />\r\n    <Divider />\r\n    <PerfectScrollbar>\r\n      <Box sx={{ minWidth: 800 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Order Ref\r\n              </TableCell>\r\n              <TableCell>\r\n                Customer\r\n              </TableCell>\r\n              <TableCell sortDirection=\"desc\">\r\n                <Tooltip\r\n                  enterDelay={300}\r\n                  title=\"Sort\"\r\n                >\r\n                  <TableSortLabel\r\n                    active\r\n                    direction=\"desc\"\r\n                  >\r\n                    Date\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n              <TableCell>\r\n                Status\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow\r\n                hover\r\n                key={order.id}\r\n              >\r\n                <TableCell>\r\n                  {order.ref}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {order.customer.name}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    label={order.status}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n    </PerfectScrollbar>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestOrders;\r\n","import { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst products = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst LatestProducts = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader\r\n      subtitle={`${products.length} in total`}\r\n      title=\"Latest Products\"\r\n    />\r\n    <Divider />\r\n    <List>\r\n      {products.map((product, i) => (\r\n        <ListItem\r\n          divider={i < products.length - 1}\r\n          key={product.id}\r\n        >\r\n          <ListItemAvatar>\r\n            <img\r\n              alt={product.name}\r\n              src={product.imageUrl}\r\n              style={{\r\n                height: 48,\r\n                width: 48\r\n              }}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={product.name}\r\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n          />\r\n          <IconButton\r\n            edge=\"end\"\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n    <Divider />\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestProducts;\r\n","import { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst Sales = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      }\r\n    ],\r\n    labels: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Dernier 7 jours\r\n          </Button>\r\n        )}\r\n        title=\"Nombre d'infectés par mois\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 400,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { green, orange } from '@material-ui/core/colors';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst TasksProgress = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            DECEDES\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            3\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: orange[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          pt: 2\r\n        }}\r\n      >\r\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: green[900],\r\n            mr: 1\r\n          }}\r\n        >\r\n          16%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          En baisse\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TasksProgress;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst TotalCustomers = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            INFECTÉS\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            1,600\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: green[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          pt: 2\r\n        }}\r\n      >\r\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: green[900],\r\n            mr: 1\r\n          }}\r\n        >\r\n          16%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          En évolution\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalCustomers;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\n\r\nconst TotalProfit = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            GUÉRIS\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            23,200\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: indigo[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <AccessibilityNewIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalProfit;\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst TrafficByDevice = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Nord', 'Sud', 'Ouest']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Nord',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Sud',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Ouest',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader title=\"Répartition par région\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 2\r\n          }}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              sx={{\r\n                p: 1,\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              \r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect }from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport Budget from 'src/components/dashboard//Budget';\r\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\r\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\r\nimport Sales from 'src/components/dashboard//Sales';\r\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\r\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\r\nimport TotalProfit from 'src/components/dashboard//TotalProfit';\r\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\r\nimport { auth } from './firebase';\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => { \r\n    (async()  =>{\r\n        console.log('async run asyn run', auth.currentUser)\r\n       if(!auth.currentUser){\r\n          navigate('/login', { replace: true });\r\n       }\r\n      })()\r\n    }, []);\r\n\r\n\r\n  return(\r\n    <>\r\n      <Helmet>\r\n        <title>Dashboard | maMED</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              sm={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <Budget />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              sm={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <TotalCustomers />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              sm={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <TasksProgress />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              sm={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <TotalProfit sx={{ height: '100%' }} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={8}\r\n              md={12}\r\n              xl={9}\r\n              xs={12}\r\n            >\r\n              <Sales />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              <TrafficByDevice sx={{ height: '100%' }} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={6}\r\n              xl={3}\r\n              xs={12}\r\n            >\r\n              {\r\n                //<LatestProducts sx={{ height: '100%' }} />\r\n              }\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={8}\r\n              md={12}\r\n              xl={9}\r\n              xs={12}\r\n            >\r\n            {\r\n              //<LatestOrders />\r\n            }\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","import { SvgIcon } from '@material-ui/core';\r\n\r\nconst Facebook = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default Facebook;\r\n","import { SvgIcon } from '@material-ui/core';\r\n\r\nconst Google = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default Google;\r\n","import React, { useState, useEffect }from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box, \r\n  Button, \r\n  Avatar,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport FacebookIcon from 'src/icons/Facebook';\r\nimport GoogleIcon from 'src/icons/Google';\r\nimport { auth } from './firebase';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({})\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPass] = useState(\"\")\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => { \r\n    (async()  =>{\r\n        console.log('async run asyn run', auth.currentUser)\r\n       if(auth.currentUser){\r\n          console.log('before user admin', auth.currentUser)\r\n          auth.currentUser.getIdTokenResult().then((idTokenResult) => {\r\n            console.log('idTokenResult idTokenResult', idTokenResult)\r\n             if (!!idTokenResult.claims.admin) {\r\n                navigate('/', { replace: true });\r\n             }else {\r\n              setError(true);\r\n             }\r\n          }).catch((error) => {\r\n            console.log(error);\r\n          });\r\n       }\r\n      })()\r\n    }, []);\r\n\r\n  async function onLogin(e){\r\n    e.preventDefault();\r\n    try{\r\n      console.log('confirm', email, password)\r\n      let confirm = await auth.signInWithEmailAndPassword(email, password)\r\n      console.log('confirm confirm', confirm)\r\n      auth.currentUser.getIdTokenResult().then((idTokenResult) => {\r\n        console.log('idTokenResult idTokenResult', idTokenResult)\r\n         if (!!idTokenResult.claims.admin) {\r\n            navigate('/', { replace: true });\r\n         }else {\r\n          setError(true);\r\n         }\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }catch(e){\r\n      console.log('error logins', e)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | maMED</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\r\n          <Box p={1}>\r\n          </Box>\r\n          <Box p={1}>\r\n            <img\r\n              src={\"/static/images/logo.png\"}\r\n              height={150}\r\n              width={150}\r\n              alt=\"logo\"\r\n            />\r\n          </Box>\r\n          <Box p={1}>\r\n          </Box>\r\n        </Box>  \r\n        <Container maxWidth=\"sm\" style={{ marginTop: \"-60px\" }}>\r\n          <Formik\r\n            initialValues={values}\r\n            // validationSchema={Yup.object().shape({\r\n            //   email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n            //   password: Yup.string().max(255).required('Password is required')\r\n            // })}\r\n            onSubmit={() => {\r\n              console.log('email', values)\r\n              //onLogin();\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={onLogin}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Hi there! nice to see you again\r\n                  </Typography>\r\n                </Box>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      //onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      //onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  sx={{\r\n                    pb: 1,\r\n                    pt: 3\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    or login with email address\r\n                  </Typography>\r\n                  {error&&\r\n                    <p\r\n                      style={{textALign: \"center\", color: \"red\"}}\r\n                    >\r\n                      Vous n'etes pas autoriser a voir ce contenu\r\n                    </p>\r\n                  }\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e)=>setEmail(e.target.value)}\r\n                  type=\"email\"\r\n                  value={email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e)=>setPass(e.target.value)}\r\n                  type=\"password\"\r\n                  value={password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                {/*\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    Don&apos;t have an account?\r\n                    {' '}\r\n                    <Link\r\n                      component={RouterLink}\r\n                      to=\"/register\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Sign up\r\n                    </Link>\r\n                  </Typography>\r\n                */}\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"h1\"\r\n        >\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"subtitle2\"\r\n        >\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt=\"Under development\"\r\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst ProductListToolbar = (props) => (\r\n  <Box {...props}>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n      }}\r\n    >\r\n      <Button>\r\n        Import\r\n      </Button>\r\n      <Button sx={{ mx: 1 }}>\r\n        Export\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Add product\r\n      </Button>\r\n    </Box>\r\n    <Box sx={{ mt: 3 }}>\r\n      <Card>\r\n        <CardContent>\r\n          <Box sx={{ maxWidth: 500 }}>\r\n            <TextField\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SvgIcon\r\n                      fontSize=\"small\"\r\n                      color=\"action\"\r\n                    >\r\n                      <SearchIcon />\r\n                    </SvgIcon>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              placeholder=\"Search product\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nexport default ProductListToolbar;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst ProductCard = ({ product, ...rest }) => (\r\n  <Card\r\n    sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }}\r\n    {...rest}\r\n  >\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          pb: 3\r\n        }}\r\n      >\r\n        <Avatar\r\n          alt=\"Product\"\r\n          src={product.media}\r\n          variant=\"square\"\r\n        />\r\n      </Box>\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n        variant=\"h4\"\r\n      >\r\n        {product.title}\r\n      </Typography>\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        {product.description}\r\n      </Typography>\r\n    </CardContent>\r\n    <Box sx={{ flexGrow: 1 }} />\r\n    <Divider />\r\n    <Box sx={{ p: 2 }}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          item\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          <AccessTimeIcon color=\"action\" />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            sx={{ pl: 1 }}\r\n            variant=\"body2\"\r\n          >\r\n            Updated 2hr ago\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          <GetAppIcon color=\"action\" />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            sx={{ pl: 1 }}\r\n            variant=\"body2\"\r\n          >\r\n            {product.totalDownloads}\r\n            {' '}\r\n            Downloads\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nProductCard.propTypes = {\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    createdAt: '27/03/2019',\r\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    media: '/static/images/products/product_1.png',\r\n    title: 'Dropbox',\r\n    totalDownloads: '594'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '31/03/2019',\r\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    media: '/static/images/products/product_2.png',\r\n    title: 'Medium Corporation',\r\n    totalDownloads: '625'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '03/04/2019',\r\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    media: '/static/images/products/product_3.png',\r\n    title: 'Slack',\r\n    totalDownloads: '857'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    media: '/static/images/products/product_4.png',\r\n    title: 'Lyft',\r\n    totalDownloads: '406'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\r\n    media: '/static/images/products/product_5.png',\r\n    title: 'GitHub',\r\n    totalDownloads: '835'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    media: '/static/images/products/product_6.png',\r\n    title: 'Squarespace',\r\n    totalDownloads: '835'\r\n  }\r\n];\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Pagination\r\n} from '@material-ui/core';\r\nimport ProductListToolbar from 'src/components/product/ProductListToolbar';\r\nimport ProductCard from 'src/components/product//ProductCard';\r\nimport products from 'src/__mocks__/products';\r\n\r\nconst ProductList = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Products | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <ProductListToolbar />\r\n        <Box sx={{ pt: 3 }}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            {products.map((product) => (\r\n              <Grid\r\n                item\r\n                key={product.id}\r\n                lg={4}\r\n                md={6}\r\n                xs={12}\r\n              >\r\n                <ProductCard product={product} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 3\r\n          }}\r\n        >\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={3}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default ProductList;\r\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={() => {\r\n              navigate('/', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    ml: -1\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst SettingsNotifications = (props) => (\r\n  <form {...props}>\r\n    <Card>\r\n      <CardHeader\r\n        subheader=\"Manage the notifications\"\r\n        title=\"Notifications\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={6}\r\n          wrap=\"wrap\"\r\n        >\r\n          <Grid\r\n            item\r\n            md={4}\r\n            sm={6}\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column'\r\n            }}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              Notifications\r\n            </Typography>\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Push Notifications\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"Text Messages\"\r\n            />\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Phone calls\"\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={4}\r\n            sm={6}\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column'\r\n            }}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              Messages\r\n            </Typography>\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"Push Notifications\"\r\n            />\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Phone calls\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Save\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  </form>\r\n);\r\n\r\nexport default SettingsNotifications;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst SettingsPassword = (props) => {\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form {...props}>\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SettingsPassword;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport SettingsNotifications from 'src/components/settings/SettingsNotifications';\r\nimport SettingsPassword from 'src/components/settings/SettingsPassword';\r\n\r\nconst SettingsView = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Settings | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <SettingsNotifications />\r\n        <Box sx={{ pt: 3 }}>\r\n          <SettingsPassword />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default SettingsView;\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/logo.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Hospital Saint Luis',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst LogoConfig = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            height: 100,\r\n            width: 100\r\n          }}\r\n        />\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        Changer le logo\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default LogoConfig;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst ParametresDetails = (props) => {\r\n  const [values, setValues] = useState({\r\n    firstName: 'Hospital Saint Luis',\r\n    lastName: 'www.saint-luis.com',\r\n    email: 'info@saint-luis.com',\r\n    phone: '673 23 43 12',\r\n    state: 'Dschang',\r\n    country: 'Cameroun'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      {...props}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Informations détaillées\"\r\n          title=\"Configuration\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"Organisation ou hospital\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Site internet\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Téléphone\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Informations supplémentaires\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Addresse complète\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Mettre A jour\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ParametresDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport LogoConfig from 'src/components/account/LogoConfig';\r\nimport ParametresDetails from 'src/components/account/ParametresDetails';\r\n\r\nfunction Parametres(props){\r\n\treturn( \r\n\t\t<>\r\n\t\t    <Helmet>\r\n\t\t      <title>Paramètres | maMED</title>\r\n\t\t    </Helmet>\r\n\t\t    <Box\r\n\t\t      sx={{\r\n\t\t        backgroundColor: 'background.default',\r\n\t\t        minHeight: '100%',\r\n\t\t        py: 3\r\n\t\t      }}\r\n\t\t    >\r\n\t\t      <Container maxWidth=\"lg\">\r\n\t\t        <Grid\r\n\t\t          container\r\n\t\t          spacing={3}\r\n\t\t        >\r\n\t\t          <Grid\r\n\t\t            item\r\n\t\t            lg={4}\r\n\t\t            md={6}\r\n\t\t            xs={12}\r\n\t\t          >\r\n\t\t            <LogoConfig />\r\n\t\t          </Grid>\r\n\t\t          <Grid\r\n\t\t            item\r\n\t\t            lg={8}\r\n\t\t            md={6}\r\n\t\t            xs={12}\r\n\t\t          >\r\n\t\t            <ParametresDetails />\r\n\t\t          </Grid>\r\n\t\t        </Grid>\r\n\t\t      </Container>\r\n\t\t    </Box>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Parametres;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  Link,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  matchPath,\r\n  Link as RouterLink,\r\n  useLocation\r\n} from 'react-router-dom'\r\n\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\n\r\nconst DoctorListResults = ({ customers, ...rest }) => {\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 1050 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Nom Complet\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Télephone\r\n                </TableCell>\r\n                <TableCell>\r\n                  Spécialité\r\n                </TableCell>\r\n                <TableCell>\r\n                  Date d'enregistrement\r\n                </TableCell>\r\n                <TableCell>\r\n                  Options\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={customer.avatarUrl}\r\n                        sx={{ mr: 2 }}\r\n                      >\r\n                        {getInitials(customer.nom_complet)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.nom_complet}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.phone}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.specialite}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={4}>\r\n                          <Link\r\n                            component={RouterLink}\r\n                            to={customer.id}\r\n                          >\r\n                            <VisibilityIcon sx={{ fontSize: '25px' }} />\r\n                          </Link>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <Button\r\n                            onClick={()=>{}}\r\n                          >\r\n                            <DeleteOutlineIcon sx={{ color: 'red', fontSize: '25px' }} />\r\n                          </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nDoctorListResults.propTypes = {\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DoctorListResults;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { bounceInUp } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  TextField,\r\n  CardHeader\r\n} from '@material-ui/core';\r\n\r\nconst styles = {\r\n  bounceInUp: {\r\n    animation: 'x 5s',\r\n    animationName: Radium.keyframes(bounceInUp, 'bounce')\r\n  }\r\n};\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\n\r\nconst states = [\"CARDIOLOGUE\", \"OPTHAMOLOGUE\"];\r\nconst states2 = [\r\n  {\r\n    value: 'F',\r\n    label: 'Femme'\r\n  },\r\n  {\r\n    value: 'H',\r\n    label: 'Homme'\r\n  }\r\n];\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundImage:\r\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <SettingsIcon />,\r\n    2: <GroupAddIcon />,\r\n    3: <VideoLabelIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Informations de Base', 'Informations détaillées', 'Authenfication'];\r\n}\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <p>Yesss</p>;\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function CustomizedSteppers({setShowForm}) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [values, setValues] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    console.log('values values', values, event.target.name,  event.target.value)\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => { \r\n    setActiveStep(0);\r\n  };\r\n\r\n  async function onPost(){\r\n    setError(false);\r\n    try{\r\n      let va = {...values, nom_complet: values.lastName+\" \"+values.firstName, createdAt: new Date().getTime()}\r\n        console.log('va va va', va)\r\n        if(!va.nom_complet || !va.specialite || !va.password || !va.phone || !va.email){\r\n          setMessage(\"Vous n'avez pas fourni toutes les informations réquises\");\r\n          setError(true);\r\n          return;\r\n        }\r\n          const r = await fetch('http://localhost:3002/create-doctor', {\r\n           method: 'POST',\r\n           headers: { 'Content-Type': 'application/json' },\r\n           body: JSON.stringify(va)\r\n          });\r\n      if(r.ok){\r\n        setShowForm(false)\r\n      }else{\r\n        setError(true)\r\n      }\r\n      console.log('resul fetching ==>', r)\r\n    }catch(e){\r\n      console.log('error fetching data', e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyleRoot>\r\n      <div className={classes.root} style={styles.bounceInUp}>\r\n        <Card>\r\n          <CardHeader\r\n            //subheader=\"The information can be edited\"\r\n            title={\r\n              <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                {steps.map((label) => (\r\n                  <Step key={label}>\r\n                    <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n            } \r\n          />\r\n\r\n          <CardContent>\r\n        \r\n            <div>\r\n              {false ? (\r\n                <div>\r\n                  <Typography className={classes.instructions}>\r\n                    All steps completed - you&apos;re finished\r\n                  </Typography>\r\n                  <Button onClick={handleReset} className={classes.button}>\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                      <div>\r\n                      {error&&\r\n                      <p style={{color: \"red\"}}>\r\n                       {message ? message :\r\n                        \"Une erreur est survenu. Probablement ce compte existe déja !\"\r\n                       }\r\n                        <br/>\r\n                      </p>\r\n                      }\r\n                  {activeStep === 0 &&\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              // helperText=\"\"\r\n                              label=\"Nom\"\r\n                              name=\"firstName\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.firstName}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Prénom\"\r\n                              name=\"lastName\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.lastName}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Email\"\r\n                              name=\"email\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.email}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Téléphone\"\r\n                              name=\"phone\"\r\n                              onChange={handleChange}\r\n                              value={values.phone}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                  }\r\n                  {activeStep === 1 &&\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Sexe\"\r\n                              name=\"sexe\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              select\r\n                              SelectProps={{ native: true }}\r\n                              value={values.sexe}\r\n                              variant=\"outlined\"\r\n                            >\r\n                              {states2.map((option) => (\r\n                                <option\r\n                                  key={option.value}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </option>\r\n                              ))}\r\n                            </TextField>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Spécialité\"\r\n                              name=\"specialite\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              select\r\n                              SelectProps={{ native: true }}\r\n                              value={values.specialite}\r\n                              variant=\"outlined\"\r\n                            >\r\n                              {states.map((option) => (\r\n                                <option\r\n                                  key={option}\r\n                                  value={option}\r\n                                >\r\n                                  {option}\r\n                                </option>\r\n                              ))}\r\n                            </TextField>\r\n                          </Grid>\r\n\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                        \r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Anciénneté\"\r\n                              name=\"ancien\"\r\n                              onChange={handleChange}\r\n                              value={values.ancien}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                          \r\n                        </Grid>\r\n                  }\r\n                  {activeStep === 2 &&\r\n                    <Card>\r\n                      <CardContent>\r\n                        <Box\r\n                          sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex',\r\n                            flexDirection: 'column'\r\n                          }}\r\n                        >\r\n                        </Box>\r\n                        <Box\r\n                          sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex',\r\n                            flexDirection: 'column'\r\n                          }}\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                          > <br/>\r\n                            <TextField\r\n                              fullWidth\r\n                              label=\"Mot de passe\"\r\n                              name=\"password\"\r\n                              onChange={handleChange}\r\n                              required\r\n                              value={values.password}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Grid>\r\n                        </Box>\r\n                      </CardContent>\r\n                      <Divider />\r\n                    </Card>\r\n                  }\r\n                      <Divider />\r\n                      <Box\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent: 'flex-end',\r\n                          p: 2\r\n                        }}\r\n                      >\r\n                          {activeStep !== steps.length && (\r\n                            <div> \r\n                              <div>\r\n                                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                                  Arrière\r\n                                </Button>\r\n                                <Button \r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={()=>{\r\n                                      if(steps.length-1 !== activeStep){\r\n                                        handleNext();\r\n                                      }else{\r\n                                        onPost();\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                  className={classes.button}\r\n                                >\r\n                                  {activeStep === steps.length - 1 ? 'Sauvegader' : 'Suivant'}\r\n                                </Button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                      </Box>\r\n                    </div>\r\n                  \r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </StyleRoot>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button, \r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\nimport { bounceOutDown } from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\n\r\nimport AddMedecin from './AddMedecin';\r\n\r\n\r\nconst styles = {\r\n  bounceOutDown: {\r\n    animation: 'x 5s',\r\n    animationName: Radium.keyframes(bounceOutDown, 'bounce')\r\n  }\r\n};\r\n \r\nfunction DoctorListToolbar(props){\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  return(\r\n    <>\r\n      { showForm&&<AddMedecin setShowForm={setShowForm} /> }\r\n      { !showForm &&\r\n          <Box {...props}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n              }}\r\n            >\r\n              <Button>\r\n                Pdf\r\n              </Button>\r\n              <Button sx={{ mx: 1 }}>\r\n                Excel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={()=>setShowForm(true)}\r\n              >\r\n                Nouveau Médecin\r\n              </Button>\r\n            </Box>\r\n            <Box sx={{ mt: 3 }}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Box sx={{ maxWidth: 500 }}>\r\n                    <TextField\r\n                      fullWidth\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SvgIcon\r\n                              fontSize=\"small\"\r\n                              color=\"action\"\r\n                            >\r\n                              <SearchIcon />\r\n                            </SvgIcon>\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                      placeholder=\"Filtrer par nom\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n          </Box>\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default DoctorListToolbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport DoctorListResults from 'src/components/customer/DoctorListResults';\r\nimport DoctorListToolbar from 'src/components/customer/DoctorListToolbar';\r\nimport { database } from './firebase';\r\nimport customers from 'src/__mocks__/customers';\r\n\r\nconst DoctorList = () => {\r\n  const [doctor, setDoctor] = useState([]);\r\n  useEffect(() => {\r\n    (async()  =>{\r\n       const custs = database.ref('users');\r\n       custs.on('value', (snapshot) => { \r\n            if(snapshot.val()){\r\n              let a = Object.entries(snapshot.val()).map(([key, value])=>{\r\n                return {...value, id: key};\r\n              })\r\n\r\n            a.sort((x, y)=> y.createdAt - x.createdAt)\r\n            a = a.filter((x)=>x.is_doctor)\r\n            console.log('userrr a=======>', a)\r\n            setDoctor(a);\r\n            }\r\n          });\r\n      })()\r\n    }, []);\r\n\r\n  return(\r\n    <>\r\n      <Helmet>\r\n        <title>Doctor | maMED</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default', \r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <DoctorListToolbar />\r\n          <Box sx={{ pt: 3 }}>\r\n            <DoctorListResults customers={doctor} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default DoctorList;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000,\r\n    email: 'ekaterina.tankova@devias.io',\r\n    name: 'Ekaterina Tankova',\r\n    phone: '304-428-3097'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_4.png',\r\n    createdAt: 1555016400000,\r\n    email: 'cao.yu@devias.io',\r\n    name: 'Cao Yu',\r\n    phone: '712-351-5711'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000,\r\n    email: 'alexa.richardson@devias.io',\r\n    name: 'Alexa Richardson',\r\n    phone: '770-635-2682'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_5.png',\r\n    createdAt: 1554930000000,\r\n    email: 'anje.keizer@devias.io',\r\n    name: 'Anje Keizer',\r\n    phone: '908-691-3242'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000,\r\n    email: 'clarke.gillebert@devias.io',\r\n    name: 'Clarke Gillebert',\r\n    phone: '972-333-4106'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000,\r\n    email: 'adam.denisov@devias.io',\r\n    name: 'Adam Denisov',\r\n    phone: '858-602-3409'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_7.png',\r\n    createdAt: 1554325200000,\r\n    email: 'ava.gregoraci@devias.io',\r\n    name: 'Ava Gregoraci',\r\n    phone: '415-907-2647'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000,\r\n    email: 'emilee.simchenko@devias.io',\r\n    name: 'Emilee Simchenko',\r\n    phone: '702-661-1654'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_9.png',\r\n    createdAt: 1554702800000,\r\n    email: 'kwak.seong.min@devias.io',\r\n    name: 'Kwak Seong-Min',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000,\r\n    email: 'merrile.burgett@devias.io',\r\n    name: 'Merrile Burgett',\r\n    phone: '801-301-7894'\r\n  }\r\n];\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatar.jpg',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nfunction timeConverter(UNIX_timestamp){\r\n  let a = new Date(UNIX_timestamp * 1000);\r\n  let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n  let year = a.getFullYear();\r\n  let month = months[a.getMonth()];\r\n  let date = a.getDate();\r\n  let hour = a.getHours();\r\n  let min = a.getMinutes();\r\n  let sec = a.getSeconds();\r\n  let time = date + ' ' + month + ' ' + year + ' à ' + hour + ':' + min + ':' + sec ;\r\n  return time;\r\n}\r\n\r\nconst AccountProfileDoctor = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={props.profile}   \r\n          sx={{\r\n            height: 100,\r\n            width: 100\r\n          }}\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom \r\n          variant=\"h3\"\r\n        >\r\n          {props.nom_complet}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {props.specialite}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {\"Inscrit le \"+ timeConverter(props.createdAt)}\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        Changer cette phote\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default AccountProfileDoctor;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Avatar,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport AccountProfileDoctor from 'src/components/account/AccountProfileDoctor';\r\nimport { database } from './firebase';\r\n\r\nconst states = [\r\n  {\r\n    value: 'F',\r\n    label: 'Femme'\r\n  },\r\n  {\r\n    value: 'H',\r\n    label: 'Homme'\r\n  }\r\n];\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst DoctorDetails = (props) => {\r\n  const [values, setValues] = useState({});\r\n\r\n  const [doctor, setDoctor] = useState([]);\r\n\r\n  useEffect(() => { \r\n    (async()  =>{\r\n       const id = String(window.location.pathname).split('/')[String(window.location.pathname).split('/').length-1];\r\n\r\n       const custs = database.ref('users/'+id);\r\n       custs.on('value', (snapshot) => { \r\n          console.log('snapshot.val() snapshot.val()', snapshot.val())\r\n            setValues(snapshot.val());\r\n            });\r\n      })()\r\n    }, []);\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Account | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Grid \r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              lg={4}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <AccountProfileDoctor {...values} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={8}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n                    <form\r\n                      autoComplete=\"off\"\r\n                      noValidate\r\n                      {...props}\r\n                    >\r\n                      <Card>\r\n                        <CardHeader\r\n                          subheader={\"Dr. \"+values.nom_complet}\r\n                          title=\"Détails\"\r\n                        />\r\n                        <Divider />\r\n                        <CardContent>\r\n                          <Grid\r\n                            container\r\n                            spacing={3}\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              md={6}\r\n                              xs={12}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Nom \"\r\n                                name=\"firstName\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.firstName}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              md={6}\r\n                              xs={12}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Prénom\"\r\n                                name=\"lastName\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.lastName}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              md={6}\r\n                              xs={12}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.email}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              md={6}\r\n                              xs={12}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Téléphone\"\r\n                                name=\"phone\"\r\n                                onChange={handleChange}\r\n                                value={values.phone}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <br/>\r\n                          <Divider />\r\n                          <Divider />\r\n                          <Divider />\r\n                          <Divider />\r\n                          <br/>\r\n                          <Grid\r\n                            container\r\n                            spacing={3}\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              md={6}\r\n                              xs={12}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Sexe\"\r\n                                name=\"state\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                select\r\n                                SelectProps={{ native: true }}\r\n                                value={values.sexe}\r\n                                variant=\"outlined\"\r\n                              >\r\n                                {states.map((option) => (\r\n                                  <option\r\n                                    key={option.value}\r\n                                    value={option.value}\r\n                                  >\r\n                                    {option.label}\r\n                                  </option>\r\n                                ))}\r\n                              </TextField>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              md={6}\r\n                              xs={12}\r\n                            >\r\n                              <TextField\r\n                                fullWidth\r\n                                label=\"Ancienneté\"\r\n                                name=\"anciennete\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.ancien}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <Box\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-end',\r\n                            p: 2\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            Mettre A jour\r\n                          </Button>\r\n                        </Box>\r\n                      </Card>\r\n                    </form>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default DoctorDetails;\r\n","import { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/components/DashboardLayout';\r\nimport MainLayout from 'src/components/MainLayout';\r\nimport Account from 'src/pages/Account';\r\nimport CustomerList from 'src/pages/CustomerList';\r\nimport Dashboard from 'src/pages/Dashboard';\r\nimport Login from 'src/pages/Login';\r\nimport NotFound from 'src/pages/NotFound';\r\nimport ProductList from 'src/pages/ProductList';\r\nimport Register from 'src/pages/Register';\r\nimport Settings from 'src/pages/Settings';\r\nimport Parametres from 'src/pages/Parametres';\r\nimport DoctorList from 'src/pages/DoctorList';\r\nimport DoctorDetails from 'src/pages/DoctorDetails';\r\n\r\nconst routes = (props) => [\r\n  {\r\n    path: '/',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <Account /> },\r\n      { path: 'patients', element: <CustomerList /> },\r\n      { path: 'medecins', element: <DoctorList /> },\r\n      { path: '/', element: <Dashboard /> },\r\n      { path: 'products', element: <ProductList /> },\r\n      { path: 'settings', element: <Settings /> },\r\n      { path: 'configuration', element: <Parametres /> },\r\n      { path: 'medecins/:docId', element: <DoctorDetails {...props} /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <Login /> },\r\n      { path: 'register', element: <Register /> },\r\n      { path: '404', element: <NotFound /> },\r\n      { path: '/', element: <Navigate to=\"/\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\n//import firebase from 'firebase'\r\n\r\nconst App = (props) => {\r\n  const routing = useRoutes(routes(props));\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}